apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ default "system" .Values.nameOverride }}-bridge-deployment
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ default "system" .Values.nameOverride }}-bridge
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ default "system" .Values.nameOverride }}-bridge
  template:
    metadata:
      labels:
        app: {{ default "system" .Values.nameOverride }}-bridge
    spec:
      {{- with .Values.image.imagePullSecret }}
      imagePullSecrets:
        - name: {{ . }}
      {{- end }}
      containers:
        - name: {{ default "system" .Values.nameOverride }}-bridge
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10

          readinessProbe:
            httpGet:
              path: /health/readiness
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          env:
            - name: MQTT_BROKER
              value: "{{ .Values.mqttBroker.name }}.{{ .Values.mqttBroker.namespace }}.svc.cluster.local:{{ .Values.mqttBroker.mqttPort }}"
            - name: MQTT_TOPIC
              value: {{ .Values.mqttBroker.topic }}
            - name: KAFKA_BROKER
              value: "{{ .Values.kafkaBroker.name }}-kafka-bootstrap.{{ .Values.kafkaBroker.namespace }}.svc.cluster.local:{{ .Values.kafkaBroker.kafkaPort }}"
            - name: KAFKA_TOPIC
              value: {{ .Values.kafkaBroker.topic }}
            - name: KAFKA_BALANCER
              value: {{ .Values.env.KAFKA_BALANCER }}