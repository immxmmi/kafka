mosquitto:
  global:
    nameOverride: "system-mosquitto"

kafka-cluster-setup:
  # Kafka UI configuration
  kafka-ui:
    cluster:
      name: kafka-showcase-cluster           # Name of the Kafka cluster
      namespace: kafka-showcase    # Kubernetes namespace where the Kafka cluster is deployed

  # Kafka cluster configuration
  kafka-cluster:
    cluster:
      name: kafka-showcase-cluster
      version: 4.0.0
      metadataVersion: 4.0-IV3
      kafkaPort: 9092
      tlsEnabled: false
      config:
        auto.create.topics.enable: false
        default.replication.factor: 1
        delete.topic.enable: true
        min.insync.replicas: 1
        offsets.topic.replication.factor: 1
        transaction.state.log.replication.factor: 1
        transaction.state.log.min.isr: 1
    nodePool:
      name: dual-role
      replicas: 1
      roles:
        - controller
        - broker
      volumes:
        - id: 0
          type: persistent-claim
          size: 10Gi
          class: cloudscale-volume-ssd
          deleteClaim: true
          kraftMetadata: shared
      resources:
        requests:
          memory: "2Gi"
          cpu: "500m"
        limits:
          memory: "4Gi"
          cpu: "1"
    topics:
     - name: topic-solar-data
       partitions: 1
       replicas: 1
       config:
         retention.ms: 604800000
         segment.bytes: 104857500
         cleanup.policy: delete

  #    - name: topic-traffic-data
  #      partitions: 1
  #      replicas: 1
  #      config:
  #        retention.ms: 604800000
  #        segment.bytes: 104857500
  #        cleanup.policy: delete

  #    - name: topic-weather-data
  #      partitions: 1
  #      replicas: 1
  #      config:
  #        retention.ms: 604800000
  #        segment.bytes: 104857500
  #        cleanup.policy: delete

# Solar System Configuration
solar-system:
  # Bridge between MQTT and Kafka
  mqtt-bridge:
    replicaCount: 1
    nameOverride: "solar-mqtt-bridge"  # Override the default name of the release
    kafkaBroker:
      name: kafka-showcase-cluster
      namespace: pitc-cicd-kafka-showcase
      kafkaPort: 9092
      topic: topic-solar-data
    mqttBroker:
      name: showcase-system-mosquitto
      namespace: pitc-cicd-kafka-showcase
      mqttPort: 1883
      topic: solar/data
    image:
      repository: harbor.puzzle.ch/pitc-cicd-private/kafka-poc
      tag: mqtt-bridge-latest
      pullPolicy: Always
      imagePullSecrets: registry-pull-secret
    service:
      type: ClusterIP
      port: 5000
      targetPort: 5000
    env:
      # Kafka partition balancer mode:
      # "RoundRobin" - Distributes messages evenly across partitions
      # "LeastBytes" - Sends messages to the partition with the least load
      # "Hash" - Assigns partitions based on a hash of the message key
      KAFKA_BALANCER: "RoundRobin"

  # Kafka web consumer configuration
  kafka-web-consumer:
    nameOverride: solar-system
    replicaCount: 1
    kafkaBroker:
      name: kafka-showcase-cluster
      namespace: pitc-cicd-kafka-showcase
      kafkaPort: 9092
      topic: topic-solar-data

    deployment:
      replicas: 1
      containerPort: 8080
      env:
        # The Kafka consumer group in which this consumer runs (e.g., "solar-consumer")
        KAFKA_CONSUMER_GROUP: "solar-consumer" 
        # Offset control:
        # "first" - Starts from the oldest available offset (reads all messages from the beginning)
        # "last" - Starts from the latest offset (only reads new messages from the start time)
        KAFKA_START_OFFSET: "first"
    image:
      image: harbor.puzzle.ch/pitc-cicd-private/kafka-poc
      tag: solar-kafka-web-consumer-latest
      imagePullPolicy: Always
      imagePullSecrets: registry-pull-secret

    service:
      enabled: true
      type: "ClusterIP"
      port: 8080

  # Mqtt producer configuration
  mqtt-producer:
    nameOverride: "solar-mqtt-producer"  # Override the default name of the release
    replicaCount: 1
    image:
      repository: harbor.puzzle.ch/pitc-cicd-private/kafka-poc
      tag: solar-mqtt-producer-latest
      pullPolicy: Always
      imagePullSecrets: registry-pull-secret

    mqttBroker:
      name: showcase-system-mosquitto
      namespace: pitc-cicd-kafka-showcase
      mqttPort: 1883
      topic: solar/data

    service:
      enabled: true
      type: ClusterIP
      port: 5001
      targetPort: 5001

    env:
      FETCH_INTERVAL: 10